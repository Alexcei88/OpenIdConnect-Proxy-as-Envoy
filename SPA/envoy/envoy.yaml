node:
  id: cabinet-gw-dev
  cluster: cabinet-gw-dev

admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9903
  
stats_sinks:
  - name: envoy.statsd
    typed_config:
      "@type": type.googleapis.com/envoy.config.metrics.v3.StatsdSink
      tcp_cluster_name: graphite_relay
      prefix: "CACabinet.Envoy.Dev"

stats_flush_interval: 10s

static_resources:
  listeners:
  - name: ingressHttpListener
    stat_prefix: ingressHttpListener
    address:
      socket_address: { address: 0.0.0.0, port_value: 14100 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingressHttpListener
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: 
              - "*"
              cors:
                allow_origin_string_match:
                - safe_regex:
                    google_re2: {}
                    regex: https:\/\/localhost.*
                allow_credentials: true
                allow_headers: X-Requested-With, content-type
              routes:
              - match: 
                  prefix: /resourceServer
                route: 
                  cluster: resource_server
              - match: 
                  prefix: /resourceFileServer
                route:
                  cluster: resource_file_server
              - match: 
                  prefix: "/"
                route:
                  cluster: angular_back
          http_filters:
          - name: envoy.filters.http.csrf
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.csrf.v3.CsrfPolicy
              filter_enabled:
                default_value: 
                  numerator: 1
                  denominator: 1
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          - name: envoy.filters.http.oauth2
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.oauth2.v3.OAuth2
              config:
                token_endpoint:
                  cluster: CACabinet-keycloak
                  uri:  https://idp.ca.testkontur.ru:8444/realms/Kontur/protocol/openid-connect/token
                  timeout: 3s
                authorization_endpoint: https://idp.ca.testkontur.ru:8444/realms/Kontur/protocol/openid-connect/auth
                redirect_uri: https://localhost:14100/oauth2/callback
                redirect_path_matcher:
                  path:
                    exact: /oauth2/callback
                signout_path:
                  path:
                    exact: /oauth2/signout
                credentials:
                  client_id: "TestShmakov"
                  token_secret:
                    name: token
                    sds_config:
                      path: "/etc/envoy/secrets/client_secret.yaml"
                  hmac_secret:
                    name: hmac
                    sds_config:
                      path: "/etc/envoy/secrets/hmac-secret.yaml"
                forward_bearer_token: true
                use_refresh_token: true
                auth_scopes:
                  - openid 
                  - profile
          - name: envoy.filters.http.router
            typed_config:
               "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          access_log:
            - name: envoy.access_loggers.stream
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                log_format:
                  json_format:
                    startTime: "%START_TIME(%Y-%m-%dT%H:%M:%S.%3fZ)%"  
                    status: "%RESPONSE_CODE%"
                    duration: "%DURATION%"
                    upstream_host: "%UPSTREAM_HOST%"
                    path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                    requestId: "%REQ(X-REQUEST-ID)%"
                    traceId: "%RESP(TRACE-ID)%"
                    client_ip: "%DOWNSTREAM_DIRECT_REMOTE_ADDRESS_WITHOUT_PORT%"
      transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
            common_tls_context:
              tls_certificates:
              - certificate_chain:
                  filename: /etc/envoy/secrets/site.tls-publickey.pem
                private_key:
                  filename: /etc/envoy/secrets/site.tls-privatekey.pem                    
  clusters:
  - name: resource_server
    connect_timeout: 10s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    respect_dns_ttl: true
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: resource_server
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: host.docker.internal
                port_value: 44390
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        allow_renegotiation: true
  - name: resource_file_server
    connect_timeout: 10s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    respect_dns_ttl: true
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: resource_file_server
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: host.docker.internal
                port_value: 44378
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        allow_renegotiation: true        
  - name: angular_back
    connect_timeout: 10s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    respect_dns_ttl: true
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: angular_back
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: host.docker.internal
                port_value: 5000            
    # так как circuit breaker включен по-умолчанию с дефолтными настройками, врубаем все по максимуму пока что(https://www.envoyproxy.io/docs/envoy/latest/faq/load_balancing/disable_circuit_breaking#faq-disable-circuit-breaking)
    circuit_breakers:
      thresholds:
        - priority: DEFAULT
          max_connections: 1000000000
          max_pending_requests: 1000000000
          max_requests: 1000000000
          max_retries: 1000000000
        - priority: HIGH
          max_connections: 1000000000
          max_pending_requests: 1000000000
          max_requests: 1000000000
          max_retries: 1000000000
    outlier_detection:
      max_ejection_percent: 50
      split_external_local_origin_errors: true
      consecutive_local_origin_failure: 8
  - name: CACabinet-keycloak
    connect_timeout: 10s
    type: STRICT_DNS
    lb_policy: MAGLEV
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: CACabinet-keycloak
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: ca-stg-gtw0.dev.kontur.ru
                port_value: 8844
        - endpoint:
            address:
              socket_address:
                address: ca-stg-gtw1.dev.kontur.ru
                port_value: 8844
        - endpoint:
            address:
              socket_address:
                address: ca-stg-gtw2.dev.kontur.ru
                port_value: 8844
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        allow_renegotiation: true
    health_checks:
      - timeout: 1s
        interval: 2s
        unhealthy_threshold: 2
        healthy_threshold: 2
        http_health_check:
          path: /health
    circuit_breakers:
      thresholds:
        - priority: DEFAULT
          max_connections: 5000
          max_pending_requests: 500
          max_requests: 10000
          max_retries: 4
        - priority: HIGH
          max_connections: 5000
          max_pending_requests: 500
          max_requests: 10000
          max_retries: 4
    outlier_detection:
      max_ejection_percent: 50
      split_external_local_origin_errors: true
      consecutive_local_origin_failure: 4
    per_connection_buffer_limit_bytes: 32768    
  - name: graphite_relay
    connect_timeout: 1s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    dns_refresh_rate: 300s
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: graphite_relay
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: graphite-relay.skbkontur.ru
                port_value: 8125
layered_runtime:
  layers:
    - name: static_layer_0
      static_layer:
        overload:
          global_downstream_max_connections: 50000
